/*
* generated by Xtext
*/
grammar InternalCupidLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.earthsystemcurator.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.earthsystemcurator.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.earthsystemcurator.services.CupidLanguageGrammarAccess;

}

@parser::members {
 
 	private CupidLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CupidLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLanguage
entryRuleLanguage 
:
{ before(grammarAccess.getLanguageRule()); }
	 ruleLanguage
{ after(grammarAccess.getLanguageRule()); } 
	 EOF 
;

// Rule Language
ruleLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageAccess().getGroup()); }
(rule__Language__Group__0)
{ after(grammarAccess.getLanguageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnonymousConceptDef
entryRuleAnonymousConceptDef 
:
{ before(grammarAccess.getAnonymousConceptDefRule()); }
	 ruleAnonymousConceptDef
{ after(grammarAccess.getAnonymousConceptDefRule()); } 
	 EOF 
;

// Rule AnonymousConceptDef
ruleAnonymousConceptDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getGroup()); }
(rule__AnonymousConceptDef__Group__0)
{ after(grammarAccess.getAnonymousConceptDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedConceptDef
entryRuleNamedConceptDef 
:
{ before(grammarAccess.getNamedConceptDefRule()); }
	 ruleNamedConceptDef
{ after(grammarAccess.getNamedConceptDefRule()); } 
	 EOF 
;

// Rule NamedConceptDef
ruleNamedConceptDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedConceptDefAccess().getGroup()); }
(rule__NamedConceptDef__Group__0)
{ after(grammarAccess.getNamedConceptDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopConceptDef
entryRuleTopConceptDef 
:
{ before(grammarAccess.getTopConceptDefRule()); }
	 ruleTopConceptDef
{ after(grammarAccess.getTopConceptDefRule()); } 
	 EOF 
;

// Rule TopConceptDef
ruleTopConceptDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopConceptDefAccess().getGroup()); }
(rule__TopConceptDef__Group__0)
{ after(grammarAccess.getTopConceptDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubconceptOrAttribute
entryRuleSubconceptOrAttribute 
:
{ before(grammarAccess.getSubconceptOrAttributeRule()); }
	 ruleSubconceptOrAttribute
{ after(grammarAccess.getSubconceptOrAttributeRule()); } 
	 EOF 
;

// Rule SubconceptOrAttribute
ruleSubconceptOrAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubconceptOrAttributeAccess().getAlternatives()); }
(rule__SubconceptOrAttribute__Alternatives)
{ after(grammarAccess.getSubconceptOrAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubconcept
entryRuleSubconcept 
:
{ before(grammarAccess.getSubconceptRule()); }
	 ruleSubconcept
{ after(grammarAccess.getSubconceptRule()); } 
	 EOF 
;

// Rule Subconcept
ruleSubconcept
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubconceptAccess().getGroup()); }
(rule__Subconcept__Group__0)
{ after(grammarAccess.getSubconceptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
(rule__Cardinality__Alternatives)
{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapping
entryRuleMapping 
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingAccess().getGroup()); }
(rule__Mapping__Group__0)
{ after(grammarAccess.getMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicitContextMapping
entryRuleImplicitContextMapping 
:
{ before(grammarAccess.getImplicitContextMappingRule()); }
	 ruleImplicitContextMapping
{ after(grammarAccess.getImplicitContextMappingRule()); } 
	 EOF 
;

// Rule ImplicitContextMapping
ruleImplicitContextMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicitContextMappingAccess().getAlternatives()); }
(rule__ImplicitContextMapping__Alternatives)
{ after(grammarAccess.getImplicitContextMappingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleName
entryRuleModuleName 
:
{ before(grammarAccess.getModuleNameRule()); }
	 ruleModuleName
{ after(grammarAccess.getModuleNameRule()); } 
	 EOF 
;

// Rule ModuleName
ruleModuleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleNameAccess().getGroup()); }
(rule__ModuleName__Group__0)
{ after(grammarAccess.getModuleNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesModule
entryRuleUsesModule 
:
{ before(grammarAccess.getUsesModuleRule()); }
	 ruleUsesModule
{ after(grammarAccess.getUsesModuleRule()); } 
	 EOF 
;

// Rule UsesModule
ruleUsesModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesModuleAccess().getGroup()); }
(rule__UsesModule__Group__0)
{ after(grammarAccess.getUsesModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesEntity
entryRuleUsesEntity 
:
{ before(grammarAccess.getUsesEntityRule()); }
	 ruleUsesEntity
{ after(grammarAccess.getUsesEntityRule()); } 
	 EOF 
;

// Rule UsesEntity
ruleUsesEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesEntityAccess().getGroup()); }
(rule__UsesEntity__Group__0)
{ after(grammarAccess.getUsesEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubroutine
entryRuleSubroutine 
:
{ before(grammarAccess.getSubroutineRule()); }
	 ruleSubroutine
{ after(grammarAccess.getSubroutineRule()); } 
	 EOF 
;

// Rule Subroutine
ruleSubroutine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubroutineAccess().getGroup()); }
(rule__Subroutine__Group__0)
{ after(grammarAccess.getSubroutineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParam
entryRuleFormalParam 
:
{ before(grammarAccess.getFormalParamRule()); }
	 ruleFormalParam
{ after(grammarAccess.getFormalParamRule()); } 
	 EOF 
;

// Rule FormalParam
ruleFormalParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParamAccess().getGroup()); }
(rule__FormalParam__Group__0)
{ after(grammarAccess.getFormalParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntent
entryRuleIntent 
:
{ before(grammarAccess.getIntentRule()); }
	 ruleIntent
{ after(grammarAccess.getIntentRule()); } 
	 EOF 
;

// Rule Intent
ruleIntent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntentAccess().getAlternatives()); }
(rule__Intent__Alternatives)
{ after(grammarAccess.getIntentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubroutineName
entryRuleSubroutineName 
:
{ before(grammarAccess.getSubroutineNameRule()); }
	 ruleSubroutineName
{ after(grammarAccess.getSubroutineNameRule()); } 
	 EOF 
;

// Rule SubroutineName
ruleSubroutineName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubroutineNameAccess().getGroup()); }
(rule__SubroutineName__Group__0)
{ after(grammarAccess.getSubroutineNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCall
entryRuleCall 
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallAccess().getGroup()); }
(rule__Call__Group__0)
{ after(grammarAccess.getCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualParam
entryRuleActualParam 
:
{ before(grammarAccess.getActualParamRule()); }
	 ruleActualParam
{ after(grammarAccess.getActualParamRule()); } 
	 EOF 
;

// Rule ActualParam
ruleActualParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActualParamAccess().getGroup()); }
(rule__ActualParam__Group__0)
{ after(grammarAccess.getActualParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualParamByKeyword
entryRuleActualParamByKeyword 
:
{ before(grammarAccess.getActualParamByKeywordRule()); }
	 ruleActualParamByKeyword
{ after(grammarAccess.getActualParamByKeywordRule()); } 
	 EOF 
;

// Rule ActualParamByKeyword
ruleActualParamByKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getGroup()); }
(rule__ActualParamByKeyword__Group__0)
{ after(grammarAccess.getActualParamByKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredEntity
entryRuleDeclaredEntity 
:
{ before(grammarAccess.getDeclaredEntityRule()); }
	 ruleDeclaredEntity
{ after(grammarAccess.getDeclaredEntityRule()); } 
	 EOF 
;

// Rule DeclaredEntity
ruleDeclaredEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredEntityAccess().getDeclaredEntityKeyword()); }

	'declaredEntity' 

{ after(grammarAccess.getDeclaredEntityAccess().getDeclaredEntityKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalExpression
entryRuleLocalExpression 
:
{ before(grammarAccess.getLocalExpressionRule()); }
	 ruleLocalExpression
{ after(grammarAccess.getLocalExpressionRule()); } 
	 EOF 
;

// Rule LocalExpression
ruleLocalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalExpressionAccess().getAlternatives()); }
(rule__LocalExpression__Alternatives)
{ after(grammarAccess.getLocalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAlternatives()); }
(rule__Expr__Alternatives)
{ after(grammarAccess.getExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathExpr
entryRulePathExpr 
:
{ before(grammarAccess.getPathExprRule()); }
	 rulePathExpr
{ after(grammarAccess.getPathExprRule()); } 
	 EOF 
;

// Rule PathExpr
rulePathExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathExprAccess().getGroup()); }
(rule__PathExpr__Group__0)
{ after(grammarAccess.getPathExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathExprNode
entryRulePathExprNode 
:
{ before(grammarAccess.getPathExprNodeRule()); }
	 rulePathExprNode
{ after(grammarAccess.getPathExprNodeRule()); } 
	 EOF 
;

// Rule PathExprNode
rulePathExprNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathExprNodeAccess().getGroup()); }
(rule__PathExprNode__Group__0)
{ after(grammarAccess.getPathExprNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathExprTerm
entryRulePathExprTerm 
:
{ before(grammarAccess.getPathExprTermRule()); }
	 rulePathExprTerm
{ after(grammarAccess.getPathExprTermRule()); } 
	 EOF 
;

// Rule PathExprTerm
rulePathExprTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathExprTermAccess().getGroup()); }
(rule__PathExprTerm__Group__0)
{ after(grammarAccess.getPathExprTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAxis
entryRuleAxis 
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAxisAccess().getAncestorAssignment()); }
(rule__Axis__AncestorAssignment)
{ after(grammarAccess.getAxisAccess().getAncestorAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SubconceptOrAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptOrAttributeAccess().getSubconceptParserRuleCall_0()); }
	ruleSubconcept
{ after(grammarAccess.getSubconceptOrAttributeAccess().getSubconceptParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubconceptOrAttributeAccess().getAttributeParserRuleCall_1()); }
	ruleAttribute
{ after(grammarAccess.getSubconceptOrAttributeAccess().getAttributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getGroup_3_0()); }
(rule__Subconcept__Group_3_0__0)
{ after(grammarAccess.getSubconceptAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getSubconceptAccess().getDefAssignment_3_1()); }
(rule__Subconcept__DefAssignment_3_1)
{ after(grammarAccess.getSubconceptAccess().getDefAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getSubconceptAccess().getGroup_3_2()); }
(rule__Subconcept__Group_3_2__0)
{ after(grammarAccess.getSubconceptAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getZeroOrMoreAssignment_0()); }
(rule__Cardinality__ZeroOrMoreAssignment_0)
{ after(grammarAccess.getCardinalityAccess().getZeroOrMoreAssignment_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getOneOrMoreAssignment_1()); }
(rule__Cardinality__OneOrMoreAssignment_1)
{ after(grammarAccess.getCardinalityAccess().getOneOrMoreAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitContextMapping__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitContextMappingAccess().getModuleParserRuleCall_0()); }
	ruleModule
{ after(grammarAccess.getImplicitContextMappingAccess().getModuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getModuleNameParserRuleCall_1()); }
	ruleModuleName
{ after(grammarAccess.getImplicitContextMappingAccess().getModuleNameParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getUsesModuleParserRuleCall_2()); }
	ruleUsesModule
{ after(grammarAccess.getImplicitContextMappingAccess().getUsesModuleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getUsesEntityParserRuleCall_3()); }
	ruleUsesEntity
{ after(grammarAccess.getImplicitContextMappingAccess().getUsesEntityParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getCallParserRuleCall_4()); }
	ruleCall
{ after(grammarAccess.getImplicitContextMappingAccess().getCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getSubroutineParserRuleCall_5()); }
	ruleSubroutine
{ after(grammarAccess.getImplicitContextMappingAccess().getSubroutineParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getSubroutineNameParserRuleCall_6()); }
	ruleSubroutineName
{ after(grammarAccess.getImplicitContextMappingAccess().getSubroutineNameParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getActualParamByKeywordParserRuleCall_7()); }
	ruleActualParamByKeyword
{ after(grammarAccess.getImplicitContextMappingAccess().getActualParamByKeywordParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getVariableDeclarationParserRuleCall_8()); }
	ruleVariableDeclaration
{ after(grammarAccess.getImplicitContextMappingAccess().getVariableDeclarationParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getImplicitContextMappingAccess().getGroup_9()); }
(rule__ImplicitContextMapping__Group_9__0)
{ after(grammarAccess.getImplicitContextMappingAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentAccess().getInAssignment_0()); }
(rule__Intent__InAssignment_0)
{ after(grammarAccess.getIntentAccess().getInAssignment_0()); }
)

    |(
{ before(grammarAccess.getIntentAccess().getOutAssignment_1()); }
(rule__Intent__OutAssignment_1)
{ after(grammarAccess.getIntentAccess().getOutAssignment_1()); }
)

    |(
{ before(grammarAccess.getIntentAccess().getInoutAssignment_2()); }
(rule__Intent__InoutAssignment_2)
{ after(grammarAccess.getIntentAccess().getInoutAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getIntegerAssignment_0()); }
(rule__Type__IntegerAssignment_0)
{ after(grammarAccess.getTypeAccess().getIntegerAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getCharacterAssignment_1()); }
(rule__Type__CharacterAssignment_1)
{ after(grammarAccess.getTypeAccess().getCharacterAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLogicalAssignment_2()); }
(rule__Type__LogicalAssignment_2)
{ after(grammarAccess.getTypeAccess().getLogicalAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getRealAssignment_3()); }
(rule__Type__RealAssignment_3)
{ after(grammarAccess.getTypeAccess().getRealAssignment_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_4()); }
(rule__Type__Group_4__0)
{ after(grammarAccess.getTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_5()); }
(rule__Type__Group_5__0)
{ after(grammarAccess.getTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalExpressionAccess().getIdAssignment_0()); }
(rule__LocalExpression__IdAssignment_0)
{ after(grammarAccess.getLocalExpressionAccess().getIdAssignment_0()); }
)

    |(
{ before(grammarAccess.getLocalExpressionAccess().getLiteralAssignment_1()); }
(rule__LocalExpression__LiteralAssignment_1)
{ after(grammarAccess.getLocalExpressionAccess().getLiteralAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getWildcardAssignment_0()); }
(rule__Expr__WildcardAssignment_0)
{ after(grammarAccess.getExprAccess().getWildcardAssignment_0()); }
)

    |(
{ before(grammarAccess.getExprAccess().getExprAssignment_1()); }
(rule__Expr__ExprAssignment_1)
{ after(grammarAccess.getExprAccess().getExprAssignment_1()); }
)

    |(
{ before(grammarAccess.getExprAccess().getPathExprAssignment_2()); }
(rule__Expr__PathExprAssignment_2)
{ after(grammarAccess.getExprAccess().getPathExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)
{ after(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)*
{ after(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
)
)

    |(
{ before(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Language__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__0__Impl
	rule__Language__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }

	'language ' 

{ after(grammarAccess.getLanguageAccess().getLanguageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__1__Impl
	rule__Language__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
(rule__Language__NameAssignment_1)
{ after(grammarAccess.getLanguageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__2__Impl
	rule__Language__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getUriAssignment_2()); }
(rule__Language__UriAssignment_2)
{ after(grammarAccess.getLanguageAccess().getUriAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__3__Impl
	rule__Language__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__4__Impl
	rule__Language__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getConceptDefAssignment_4()); }
(rule__Language__ConceptDefAssignment_4)
{ after(grammarAccess.getLanguageAccess().getConceptDefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__5__Impl
	rule__Language__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getConceptDefAssignment_5()); }
(rule__Language__ConceptDefAssignment_5)*
{ after(grammarAccess.getLanguageAccess().getConceptDefAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getKeyAssignment_0()); }
(rule__Annotation__KeyAssignment_0)
{ after(grammarAccess.getAnnotationAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_1()); }
(rule__Annotation__Group_1__0)?
{ after(grammarAccess.getAnnotationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_1__0__Impl
	rule__Annotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getAnnotationAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueAssignment_1_1()); }
(rule__Annotation__ValueAssignment_1_1)
{ after(grammarAccess.getAnnotationAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnonymousConceptDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group__0__Impl
	rule__AnonymousConceptDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getConceptDefAction_0()); }
(

)
{ after(grammarAccess.getAnonymousConceptDefAccess().getConceptDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group__1__Impl
	rule__AnonymousConceptDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getGroup_1()); }
(rule__AnonymousConceptDef__Group_1__0)?
{ after(grammarAccess.getAnonymousConceptDefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getGroup_2()); }
(rule__AnonymousConceptDef__Group_2__0)?
{ after(grammarAccess.getAnonymousConceptDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnonymousConceptDef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_1__0__Impl
	rule__AnonymousConceptDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getAnonymousConceptDefAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_1__1__Impl
	rule__AnonymousConceptDef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getMappingAssignment_1_1()); }
(rule__AnonymousConceptDef__MappingAssignment_1_1)
{ after(grammarAccess.getAnonymousConceptDefAccess().getMappingAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getAnonymousConceptDefAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnonymousConceptDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_2__0__Impl
	rule__AnonymousConceptDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getAnonymousConceptDefAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_2__1__Impl
	rule__AnonymousConceptDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getAnnotationAssignment_2_1()); }
(rule__AnonymousConceptDef__AnnotationAssignment_2_1)*
{ after(grammarAccess.getAnonymousConceptDefAccess().getAnnotationAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_2__2__Impl
	rule__AnonymousConceptDef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getChildAssignment_2_2()); }
(rule__AnonymousConceptDef__ChildAssignment_2_2)*
{ after(grammarAccess.getAnonymousConceptDefAccess().getChildAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousConceptDef__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnonymousConceptDef__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getRightCurlyBracketKeyword_2_3()); }

	'}' 

{ after(grammarAccess.getAnonymousConceptDefAccess().getRightCurlyBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamedConceptDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group__0__Impl
	rule__NamedConceptDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getNamedAssignment_0()); }
(rule__NamedConceptDef__NamedAssignment_0)
{ after(grammarAccess.getNamedConceptDefAccess().getNamedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group__1__Impl
	rule__NamedConceptDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getNameAssignment_1()); }
(rule__NamedConceptDef__NameAssignment_1)
{ after(grammarAccess.getNamedConceptDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group__2__Impl
	rule__NamedConceptDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getGroup_2()); }
(rule__NamedConceptDef__Group_2__0)?
{ after(grammarAccess.getNamedConceptDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getGroup_3()); }
(rule__NamedConceptDef__Group_3__0)?
{ after(grammarAccess.getNamedConceptDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamedConceptDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_2__0__Impl
	rule__NamedConceptDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getNamedConceptDefAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_2__1__Impl
	rule__NamedConceptDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getMappingAssignment_2_1()); }
(rule__NamedConceptDef__MappingAssignment_2_1)
{ after(grammarAccess.getNamedConceptDefAccess().getMappingAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getGreaterThanSignKeyword_2_2()); }

	'>' 

{ after(grammarAccess.getNamedConceptDefAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedConceptDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_3__0__Impl
	rule__NamedConceptDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getNamedConceptDefAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_3__1__Impl
	rule__NamedConceptDef__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getAnnotationAssignment_3_1()); }
(rule__NamedConceptDef__AnnotationAssignment_3_1)*
{ after(grammarAccess.getNamedConceptDefAccess().getAnnotationAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_3__2__Impl
	rule__NamedConceptDef__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getChildAssignment_3_2()); }
(rule__NamedConceptDef__ChildAssignment_3_2)*
{ after(grammarAccess.getNamedConceptDefAccess().getChildAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedConceptDef__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedConceptDef__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getNamedConceptDefAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TopConceptDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group__0__Impl
	rule__TopConceptDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getTopAssignment_0()); }
(rule__TopConceptDef__TopAssignment_0)
{ after(grammarAccess.getTopConceptDefAccess().getTopAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group__1__Impl
	rule__TopConceptDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getNamedAssignment_1()); }
(rule__TopConceptDef__NamedAssignment_1)
{ after(grammarAccess.getTopConceptDefAccess().getNamedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group__2__Impl
	rule__TopConceptDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getNameAssignment_2()); }
(rule__TopConceptDef__NameAssignment_2)
{ after(grammarAccess.getTopConceptDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group__3__Impl
	rule__TopConceptDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getGroup_3()); }
(rule__TopConceptDef__Group_3__0)?
{ after(grammarAccess.getTopConceptDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getGroup_4()); }
(rule__TopConceptDef__Group_4__0)?
{ after(grammarAccess.getTopConceptDefAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TopConceptDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_3__0__Impl
	rule__TopConceptDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getTopConceptDefAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_3__1__Impl
	rule__TopConceptDef__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getMappingAssignment_3_1()); }
(rule__TopConceptDef__MappingAssignment_3_1)
{ after(grammarAccess.getTopConceptDefAccess().getMappingAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getGreaterThanSignKeyword_3_2()); }

	'>' 

{ after(grammarAccess.getTopConceptDefAccess().getGreaterThanSignKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TopConceptDef__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_4__0__Impl
	rule__TopConceptDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getTopConceptDefAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_4__1__Impl
	rule__TopConceptDef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getAnnotationAssignment_4_1()); }
(rule__TopConceptDef__AnnotationAssignment_4_1)*
{ after(grammarAccess.getTopConceptDefAccess().getAnnotationAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_4__2__Impl
	rule__TopConceptDef__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getChildAssignment_4_2()); }
(rule__TopConceptDef__ChildAssignment_4_2)*
{ after(grammarAccess.getTopConceptDefAccess().getChildAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopConceptDef__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopConceptDef__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getRightCurlyBracketKeyword_4_3()); }

	'}' 

{ after(grammarAccess.getTopConceptDefAccess().getRightCurlyBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Subconcept__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group__0__Impl
	rule__Subconcept__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getNameAssignment_0()); }
(rule__Subconcept__NameAssignment_0)
{ after(grammarAccess.getSubconceptAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subconcept__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group__1__Impl
	rule__Subconcept__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getCardinalityAssignment_1()); }
(rule__Subconcept__CardinalityAssignment_1)?
{ after(grammarAccess.getSubconceptAccess().getCardinalityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subconcept__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group__2__Impl
	rule__Subconcept__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getEssentialAssignment_2()); }
(rule__Subconcept__EssentialAssignment_2)?
{ after(grammarAccess.getSubconceptAccess().getEssentialAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subconcept__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getAlternatives_3()); }
(rule__Subconcept__Alternatives_3)
{ after(grammarAccess.getSubconceptAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Subconcept__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group_3_0__0__Impl
	rule__Subconcept__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getColonKeyword_3_0_0()); }

	':' 

{ after(grammarAccess.getSubconceptAccess().getColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subconcept__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getDefAssignment_3_0_1()); }
(rule__Subconcept__DefAssignment_3_0_1)
{ after(grammarAccess.getSubconceptAccess().getDefAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subconcept__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group_3_2__0__Impl
	rule__Subconcept__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getReferenceAssignment_3_2_0()); }
(rule__Subconcept__ReferenceAssignment_3_2_0)
{ after(grammarAccess.getSubconceptAccess().getReferenceAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subconcept__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subconcept__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getRefAssignment_3_2_1()); }
(rule__Subconcept__RefAssignment_3_2_1)
{ after(grammarAccess.getSubconceptAccess().getRefAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttribAssignment_0()); }
(rule__Attribute__AttribAssignment_0)
{ after(grammarAccess.getAttributeAccess().getAttribAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCardinalityAssignment_2()); }
(rule__Attribute__CardinalityAssignment_2)?
{ after(grammarAccess.getAttributeAccess().getCardinalityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEssentialAssignment_3()); }
(rule__Attribute__EssentialAssignment_3)?
{ after(grammarAccess.getAttributeAccess().getEssentialAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
(rule__Attribute__Group_4__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_5()); }
(rule__Attribute__Group_5__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Attribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLessThanSignKeyword_4_0()); }

	'<' 

{ after(grammarAccess.getAttributeAccess().getLessThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__1__Impl
	rule__Attribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttribMappingAssignment_4_1()); }
(rule__Attribute__AttribMappingAssignment_4_1)
{ after(grammarAccess.getAttributeAccess().getAttribMappingAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGreaterThanSignKeyword_4_2()); }

	'>' 

{ after(grammarAccess.getAttributeAccess().getGreaterThanSignKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_5__0__Impl
	rule__Attribute__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_5__1__Impl
	rule__Attribute__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAnnotationAssignment_5_1()); }
(rule__Attribute__AnnotationAssignment_5_1)*
{ after(grammarAccess.getAttributeAccess().getAnnotationAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Mapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getContextAssignment_0()); }
(rule__Mapping__ContextAssignment_0)?
{ after(grammarAccess.getMappingAccess().getContextAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMappingAssignment_1()); }
(rule__Mapping__MappingAssignment_1)
{ after(grammarAccess.getMappingAccess().getMappingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImplicitContextMapping__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitContextMapping__Group_9__0__Impl
	rule__ImplicitContextMapping__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitContextMapping__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitContextMappingAccess().getDeclaredEntityAction_9_0()); }
(

)
{ after(grammarAccess.getImplicitContextMappingAccess().getDeclaredEntityAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicitContextMapping__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitContextMapping__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitContextMapping__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitContextMappingAccess().getDeclaredEntityParserRuleCall_9_1()); }
	ruleDeclaredEntity
{ after(grammarAccess.getImplicitContextMappingAccess().getDeclaredEntityParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleAction_0()); }
(

)
{ after(grammarAccess.getModuleAccess().getModuleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_1()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_2()); }
(rule__Module__Group_2__0)?
{ after(grammarAccess.getModuleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__0__Impl
	rule__Module__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getModuleAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__1__Impl
	rule__Module__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2_1()); }
(rule__Module__NameAssignment_2_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getModuleAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModuleName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleName__Group__0__Impl
	rule__ModuleName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleNameAccess().getModuleNameAction_0()); }
(

)
{ after(grammarAccess.getModuleNameAccess().getModuleNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleNameAccess().getModuleNameKeyword_1()); }

	'moduleName' 

{ after(grammarAccess.getModuleNameAccess().getModuleNameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UsesModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesModule__Group__0__Impl
	rule__UsesModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesModuleAccess().getUsesModuleKeyword_0()); }

	'usesModule' 

{ after(grammarAccess.getUsesModuleAccess().getUsesModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesModule__Group__1__Impl
	rule__UsesModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesModuleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUsesModuleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesModule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesModule__Group__2__Impl
	rule__UsesModule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesModule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesModuleAccess().getNameAssignment_2()); }
(rule__UsesModule__NameAssignment_2)
{ after(grammarAccess.getUsesModuleAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesModule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesModule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesModule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesModuleAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUsesModuleAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UsesEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesEntity__Group__0__Impl
	rule__UsesEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesEntityAccess().getUsesEntityKeyword_0()); }

	'usesEntity' 

{ after(grammarAccess.getUsesEntityAccess().getUsesEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesEntity__Group__1__Impl
	rule__UsesEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesEntityAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUsesEntityAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesEntity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesEntity__Group__2__Impl
	rule__UsesEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesEntity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesEntityAccess().getNameAssignment_2()); }
(rule__UsesEntity__NameAssignment_2)
{ after(grammarAccess.getUsesEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UsesEntity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UsesEntity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsesEntity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesEntityAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUsesEntityAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Subroutine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__0__Impl
	rule__Subroutine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getSubroutineKeyword_0()); }

	'subroutine' 

{ after(grammarAccess.getSubroutineAccess().getSubroutineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__1__Impl
	rule__Subroutine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSubroutineAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__2__Impl
	rule__Subroutine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getNameAssignment_2()); }
(rule__Subroutine__NameAssignment_2)
{ after(grammarAccess.getSubroutineAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__3__Impl
	rule__Subroutine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getGroup_3()); }
(rule__Subroutine__Group_3__0)?
{ after(grammarAccess.getSubroutineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getSubroutineAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Subroutine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3__0__Impl
	rule__Subroutine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getSubroutineAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3__1__Impl
	rule__Subroutine__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getGroup_3_1()); }
(rule__Subroutine__Group_3_1__0)?
{ after(grammarAccess.getSubroutineAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getSubroutineAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Subroutine__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3_1__0__Impl
	rule__Subroutine__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getParamsAssignment_3_1_0()); }
(rule__Subroutine__ParamsAssignment_3_1_0)
{ after(grammarAccess.getSubroutineAccess().getParamsAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getGroup_3_1_1()); }
(rule__Subroutine__Group_3_1_1__0)*
{ after(grammarAccess.getSubroutineAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subroutine__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3_1_1__0__Impl
	rule__Subroutine__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getCommaKeyword_3_1_1_0()); }

	',' 

{ after(grammarAccess.getSubroutineAccess().getCommaKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getParamsAssignment_3_1_1_1()); }
(rule__Subroutine__ParamsAssignment_3_1_1_1)
{ after(grammarAccess.getSubroutineAccess().getParamsAssignment_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParam__Group__0__Impl
	rule__FormalParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getIntentAssignment_0()); }
(rule__FormalParam__IntentAssignment_0)?
{ after(grammarAccess.getFormalParamAccess().getIntentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParam__Group__1__Impl
	rule__FormalParam__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getTypeAssignment_1()); }
(rule__FormalParam__TypeAssignment_1)
{ after(grammarAccess.getFormalParamAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParam__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParam__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getNameAssignment_2()); }
(rule__FormalParam__NameAssignment_2)
{ after(grammarAccess.getFormalParamAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__0__Impl
	rule__Type__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDoubleAssignment_4_0()); }
(rule__Type__DoubleAssignment_4_0)
{ after(grammarAccess.getTypeAccess().getDoubleAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrecisionKeyword_4_1()); }
(
	'precision' 
)?
{ after(grammarAccess.getTypeAccess().getPrecisionKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__0__Impl
	rule__Type__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDerivedAssignment_5_0()); }
(rule__Type__DerivedAssignment_5_0)
{ after(grammarAccess.getTypeAccess().getDerivedAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__1__Impl
	rule__Type__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_5_1()); }

	'(' 

{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__2__Impl
	rule__Type__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDerivedTypeAssignment_5_2()); }
(rule__Type__DerivedTypeAssignment_5_2)
{ after(grammarAccess.getTypeAccess().getDerivedTypeAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_5_3()); }

	')' 

{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SubroutineName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group__0__Impl
	rule__SubroutineName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getSubroutineNameKeyword_0()); }

	'subroutineName' 

{ after(grammarAccess.getSubroutineNameAccess().getSubroutineNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubroutineName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group__1__Impl
	rule__SubroutineName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getSubroutineNameAction_1()); }
(

)
{ after(grammarAccess.getSubroutineNameAccess().getSubroutineNameAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubroutineName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getGroup_2()); }
(rule__SubroutineName__Group_2__0)?
{ after(grammarAccess.getSubroutineNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubroutineName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group_2__0__Impl
	rule__SubroutineName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getSubroutineNameAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubroutineName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group_2__1__Impl
	rule__SubroutineName__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getNameAssignment_2_1()); }
(rule__SubroutineName__NameAssignment_2_1)
{ after(grammarAccess.getSubroutineNameAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubroutineName__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubroutineName__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getSubroutineNameAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCallKeyword_0()); }

	'call' 

{ after(grammarAccess.getCallAccess().getCallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__2__Impl
	rule__Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getSubroutineNameAssignment_2()); }
(rule__Call__SubroutineNameAssignment_2)
{ after(grammarAccess.getCallAccess().getSubroutineNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__3__Impl
	rule__Call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_3()); }
(rule__Call__Group_3__0)?
{ after(grammarAccess.getCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Call__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3__0__Impl
	rule__Call__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getCallAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3__1__Impl
	rule__Call__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_3_1()); }
(rule__Call__Group_3_1__0)?
{ after(grammarAccess.getCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getCallAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Call__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3_1__0__Impl
	rule__Call__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParamsAssignment_3_1_0()); }
(rule__Call__ParamsAssignment_3_1_0)
{ after(grammarAccess.getCallAccess().getParamsAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_3_1_1()); }
(rule__Call__Group_3_1_1__0)*
{ after(grammarAccess.getCallAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3_1_1__0__Impl
	rule__Call__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCommaKeyword_3_1_1_0()); }

	',' 

{ after(grammarAccess.getCallAccess().getCommaKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParamsAssignment_3_1_1_1()); }
(rule__Call__ParamsAssignment_3_1_1_1)
{ after(grammarAccess.getCallAccess().getParamsAssignment_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActualParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParam__Group__0__Impl
	rule__ActualParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getGroup_0()); }
(rule__ActualParam__Group_0__0)?
{ after(grammarAccess.getActualParamAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getValueAssignment_1()); }
(rule__ActualParam__ValueAssignment_1)
{ after(grammarAccess.getActualParamAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActualParam__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParam__Group_0__0__Impl
	rule__ActualParam__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getKeywordAssignment_0_0()); }
(rule__ActualParam__KeywordAssignment_0_0)
{ after(grammarAccess.getActualParamAccess().getKeywordAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParam__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParam__Group_0__1__Impl
	rule__ActualParam__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getOptionalAssignment_0_1()); }
(rule__ActualParam__OptionalAssignment_0_1)?
{ after(grammarAccess.getActualParamAccess().getOptionalAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParam__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParam__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getEqualsSignKeyword_0_2()); }

	'=' 

{ after(grammarAccess.getActualParamAccess().getEqualsSignKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActualParamByKeyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParamByKeyword__Group__0__Impl
	rule__ActualParamByKeyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParamByKeyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getActualParamByKeywordKeyword_0()); }

	'actualParamByKeyword' 

{ after(grammarAccess.getActualParamByKeywordAccess().getActualParamByKeywordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParamByKeyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParamByKeyword__Group__1__Impl
	rule__ActualParamByKeyword__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParamByKeyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getActualParamByKeywordAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParamByKeyword__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParamByKeyword__Group__2__Impl
	rule__ActualParamByKeyword__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParamByKeyword__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getKeywordAssignment_2()); }
(rule__ActualParamByKeyword__KeywordAssignment_2)
{ after(grammarAccess.getActualParamByKeywordAccess().getKeywordAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParamByKeyword__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualParamByKeyword__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParamByKeyword__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getActualParamByKeywordAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getDeclarationKeyword_0()); }

	'declaration' 

{ after(grammarAccess.getVariableDeclarationAccess().getDeclarationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getVariableDeclarationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2()); }
(rule__VariableDeclaration__TypeAssignment_2)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getVariableDeclarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PathExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExpr__Group__0__Impl
	rule__PathExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getPathExprAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprAccess().getPathExprNodeParserRuleCall_1()); }
	rulePathExprNode
{ after(grammarAccess.getPathExprAccess().getPathExprNodeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathExprNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprNode__Group__0__Impl
	rule__PathExprNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getPathExprTermParserRuleCall_0()); }
	rulePathExprTerm
{ after(grammarAccess.getPathExprNodeAccess().getPathExprTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExprNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getGroup_1()); }
(rule__PathExprNode__Group_1__0)*
{ after(grammarAccess.getPathExprNodeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathExprNode__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprNode__Group_1__0__Impl
	rule__PathExprNode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getPathExprHeadAction_1_0()); }
(

)
{ after(grammarAccess.getPathExprNodeAccess().getPathExprHeadAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExprNode__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprNode__Group_1__1__Impl
	rule__PathExprNode__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getPathExprNodeAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExprNode__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprNode__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getTailAssignment_1_2()); }
(rule__PathExprNode__TailAssignment_1_2)
{ after(grammarAccess.getPathExprNodeAccess().getTailAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathExprTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprTerm__Group__0__Impl
	rule__PathExprTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprTermAccess().getPathExprTermAction_0()); }
(

)
{ after(grammarAccess.getPathExprTermAccess().getPathExprTermAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExprTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprTerm__Group__1__Impl
	rule__PathExprTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprTermAccess().getAxisAssignment_1()); }
(rule__PathExprTerm__AxisAssignment_1)?
{ after(grammarAccess.getPathExprTermAccess().getAxisAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathExprTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathExprTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprTermAccess().getRefAssignment_2()); }
(rule__PathExprTerm__RefAssignment_2)
{ after(grammarAccess.getPathExprTermAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Language__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLanguageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__UriAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getUriSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getLanguageAccess().getUriSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__ConceptDefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getConceptDefTopConceptDefParserRuleCall_4_0()); }
	ruleTopConceptDef{ after(grammarAccess.getLanguageAccess().getConceptDefTopConceptDefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__ConceptDefAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getConceptDefNamedConceptDefParserRuleCall_5_0()); }
	ruleNamedConceptDef{ after(grammarAccess.getLanguageAccess().getConceptDefNamedConceptDefParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getKeyANNOTATION_IDTerminalRuleCall_0_0()); }
	RULE_ANNOTATION_ID{ after(grammarAccess.getAnnotationAccess().getKeyANNOTATION_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__MappingAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getMappingMappingParserRuleCall_1_1_0()); }
	ruleMapping{ after(grammarAccess.getAnonymousConceptDefAccess().getMappingMappingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__AnnotationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getAnnotationAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getAnonymousConceptDefAccess().getAnnotationAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousConceptDef__ChildAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnonymousConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_2_2_0()); }
	ruleSubconceptOrAttribute{ after(grammarAccess.getAnonymousConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__NamedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getNamedConceptKeyword_0_0()); }
(
{ before(grammarAccess.getNamedConceptDefAccess().getNamedConceptKeyword_0_0()); }

	'concept' 

{ after(grammarAccess.getNamedConceptDefAccess().getNamedConceptKeyword_0_0()); }
)

{ after(grammarAccess.getNamedConceptDefAccess().getNamedConceptKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNamedConceptDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__MappingAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getMappingMappingParserRuleCall_2_1_0()); }
	ruleMapping{ after(grammarAccess.getNamedConceptDefAccess().getMappingMappingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__AnnotationAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getAnnotationAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getNamedConceptDefAccess().getAnnotationAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedConceptDef__ChildAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_3_2_0()); }
	ruleSubconceptOrAttribute{ after(grammarAccess.getNamedConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__TopAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getTopTopKeyword_0_0()); }
(
{ before(grammarAccess.getTopConceptDefAccess().getTopTopKeyword_0_0()); }

	'top' 

{ after(grammarAccess.getTopConceptDefAccess().getTopTopKeyword_0_0()); }
)

{ after(grammarAccess.getTopConceptDefAccess().getTopTopKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__NamedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getNamedConceptKeyword_1_0()); }
(
{ before(grammarAccess.getTopConceptDefAccess().getNamedConceptKeyword_1_0()); }

	'concept' 

{ after(grammarAccess.getTopConceptDefAccess().getNamedConceptKeyword_1_0()); }
)

{ after(grammarAccess.getTopConceptDefAccess().getNamedConceptKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getTopConceptDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__MappingAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getMappingMappingParserRuleCall_3_1_0()); }
	ruleMapping{ after(grammarAccess.getTopConceptDefAccess().getMappingMappingParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__AnnotationAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getAnnotationAnnotationParserRuleCall_4_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTopConceptDefAccess().getAnnotationAnnotationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopConceptDef__ChildAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_4_2_0()); }
	ruleSubconceptOrAttribute{ after(grammarAccess.getTopConceptDefAccess().getChildSubconceptOrAttributeParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSubconceptAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__CardinalityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getCardinalityCardinalityParserRuleCall_1_0()); }
	ruleCardinality{ after(grammarAccess.getSubconceptAccess().getCardinalityCardinalityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__EssentialAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getEssentialExclamationMarkKeyword_2_0()); }
(
{ before(grammarAccess.getSubconceptAccess().getEssentialExclamationMarkKeyword_2_0()); }

	'!' 

{ after(grammarAccess.getSubconceptAccess().getEssentialExclamationMarkKeyword_2_0()); }
)

{ after(grammarAccess.getSubconceptAccess().getEssentialExclamationMarkKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__DefAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getDefNamedConceptDefParserRuleCall_3_0_1_0()); }
	ruleNamedConceptDef{ after(grammarAccess.getSubconceptAccess().getDefNamedConceptDefParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__DefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getDefAnonymousConceptDefParserRuleCall_3_1_0()); }
	ruleAnonymousConceptDef{ after(grammarAccess.getSubconceptAccess().getDefAnonymousConceptDefParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__ReferenceAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getReferenceColonKeyword_3_2_0_0()); }
(
{ before(grammarAccess.getSubconceptAccess().getReferenceColonKeyword_3_2_0_0()); }

	':' 

{ after(grammarAccess.getSubconceptAccess().getReferenceColonKeyword_3_2_0_0()); }
)

{ after(grammarAccess.getSubconceptAccess().getReferenceColonKeyword_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subconcept__RefAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubconceptAccess().getRefConceptDefCrossReference_3_2_1_0()); }
(
{ before(grammarAccess.getSubconceptAccess().getRefConceptDefIDTerminalRuleCall_3_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSubconceptAccess().getRefConceptDefIDTerminalRuleCall_3_2_1_0_1()); }
)
{ after(grammarAccess.getSubconceptAccess().getRefConceptDefCrossReference_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttribAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttribAttribKeyword_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getAttribAttribKeyword_0_0()); }

	'attrib' 

{ after(grammarAccess.getAttributeAccess().getAttribAttribKeyword_0_0()); }
)

{ after(grammarAccess.getAttributeAccess().getAttribAttribKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__CardinalityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCardinalityCardinalityParserRuleCall_2_0()); }
	ruleCardinality{ after(grammarAccess.getAttributeAccess().getCardinalityCardinalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__EssentialAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEssentialExclamationMarkKeyword_3_0()); }
(
{ before(grammarAccess.getAttributeAccess().getEssentialExclamationMarkKeyword_3_0()); }

	'!' 

{ after(grammarAccess.getAttributeAccess().getEssentialExclamationMarkKeyword_3_0()); }
)

{ after(grammarAccess.getAttributeAccess().getEssentialExclamationMarkKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttribMappingAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttribMappingMappingParserRuleCall_4_1_0()); }
	ruleMapping{ after(grammarAccess.getAttributeAccess().getAttribMappingMappingParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AnnotationAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAnnotationAnnotationParserRuleCall_5_1_0()); }
	ruleAnnotation{ after(grammarAccess.getAttributeAccess().getAnnotationAnnotationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__ZeroOrMoreAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getZeroOrMoreAsteriskKeyword_0_0()); }
(
{ before(grammarAccess.getCardinalityAccess().getZeroOrMoreAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getCardinalityAccess().getZeroOrMoreAsteriskKeyword_0_0()); }
)

{ after(grammarAccess.getCardinalityAccess().getZeroOrMoreAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__OneOrMoreAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getOneOrMorePlusSignKeyword_1_0()); }
(
{ before(grammarAccess.getCardinalityAccess().getOneOrMorePlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getCardinalityAccess().getOneOrMorePlusSignKeyword_1_0()); }
)

{ after(grammarAccess.getCardinalityAccess().getOneOrMorePlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ContextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getContextPathExprParserRuleCall_0_0()); }
	rulePathExpr{ after(grammarAccess.getMappingAccess().getContextPathExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__MappingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMappingImplicitContextMappingParserRuleCall_1_0()); }
	ruleImplicitContextMapping{ after(grammarAccess.getMappingAccess().getMappingImplicitContextMappingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getModuleAccess().getNameExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesModule__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesModuleAccess().getNameExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getUsesModuleAccess().getNameExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UsesEntity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesEntityAccess().getNameExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getUsesEntityAccess().getNameExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getNameExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getSubroutineAccess().getNameExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__ParamsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getParamsFormalParamParserRuleCall_3_1_0_0()); }
	ruleFormalParam{ after(grammarAccess.getSubroutineAccess().getParamsFormalParamParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__ParamsAssignment_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getParamsFormalParamParserRuleCall_3_1_1_1_0()); }
	ruleFormalParam{ after(grammarAccess.getSubroutineAccess().getParamsFormalParamParserRuleCall_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__IntentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getIntentIntentParserRuleCall_0_0()); }
	ruleIntent{ after(grammarAccess.getFormalParamAccess().getIntentIntentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getFormalParamAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParam__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamAccess().getNameExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getFormalParamAccess().getNameExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intent__InAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentAccess().getInInKeyword_0_0()); }
(
{ before(grammarAccess.getIntentAccess().getInInKeyword_0_0()); }

	'in' 

{ after(grammarAccess.getIntentAccess().getInInKeyword_0_0()); }
)

{ after(grammarAccess.getIntentAccess().getInInKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intent__OutAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentAccess().getOutOutKeyword_1_0()); }
(
{ before(grammarAccess.getIntentAccess().getOutOutKeyword_1_0()); }

	'out' 

{ after(grammarAccess.getIntentAccess().getOutOutKeyword_1_0()); }
)

{ after(grammarAccess.getIntentAccess().getOutOutKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intent__InoutAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentAccess().getInoutInoutKeyword_2_0()); }
(
{ before(grammarAccess.getIntentAccess().getInoutInoutKeyword_2_0()); }

	'inout' 

{ after(grammarAccess.getIntentAccess().getInoutInoutKeyword_2_0()); }
)

{ after(grammarAccess.getIntentAccess().getInoutInoutKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__IntegerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getIntegerIntegerKeyword_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getIntegerIntegerKeyword_0_0()); }

	'integer' 

{ after(grammarAccess.getTypeAccess().getIntegerIntegerKeyword_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getIntegerIntegerKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__CharacterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCharacterCharacterKeyword_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getCharacterCharacterKeyword_1_0()); }

	'character' 

{ after(grammarAccess.getTypeAccess().getCharacterCharacterKeyword_1_0()); }
)

{ after(grammarAccess.getTypeAccess().getCharacterCharacterKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__LogicalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLogicalLogicalKeyword_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getLogicalLogicalKeyword_2_0()); }

	'logical' 

{ after(grammarAccess.getTypeAccess().getLogicalLogicalKeyword_2_0()); }
)

{ after(grammarAccess.getTypeAccess().getLogicalLogicalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__RealAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRealRealKeyword_3_0()); }
(
{ before(grammarAccess.getTypeAccess().getRealRealKeyword_3_0()); }

	'real' 

{ after(grammarAccess.getTypeAccess().getRealRealKeyword_3_0()); }
)

{ after(grammarAccess.getTypeAccess().getRealRealKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DoubleAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDoubleDoubleKeyword_4_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getDoubleDoubleKeyword_4_0_0()); }

	'double' 

{ after(grammarAccess.getTypeAccess().getDoubleDoubleKeyword_4_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getDoubleDoubleKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DerivedAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDerivedTypeKeyword_5_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getDerivedTypeKeyword_5_0_0()); }

	'type' 

{ after(grammarAccess.getTypeAccess().getDerivedTypeKeyword_5_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getDerivedTypeKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DerivedTypeAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDerivedTypeExprParserRuleCall_5_2_0()); }
	ruleExpr{ after(grammarAccess.getTypeAccess().getDerivedTypeExprParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubroutineName__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineNameAccess().getNameExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getSubroutineNameAccess().getNameExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__SubroutineNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getSubroutineNameExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getCallAccess().getSubroutineNameExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParamsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParamsActualParamParserRuleCall_3_1_0_0()); }
	ruleActualParam{ after(grammarAccess.getCallAccess().getParamsActualParamParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParamsAssignment_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParamsActualParamParserRuleCall_3_1_1_1_0()); }
	ruleActualParam{ after(grammarAccess.getCallAccess().getParamsActualParamParserRuleCall_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__KeywordAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getKeywordIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getActualParamAccess().getKeywordIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__OptionalAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getOptionalQuestionMarkKeyword_0_1_0()); }
(
{ before(grammarAccess.getActualParamAccess().getOptionalQuestionMarkKeyword_0_1_0()); }

	'?' 

{ after(grammarAccess.getActualParamAccess().getOptionalQuestionMarkKeyword_0_1_0()); }
)

{ after(grammarAccess.getActualParamAccess().getOptionalQuestionMarkKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParam__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamAccess().getValueExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getActualParamAccess().getValueExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParamByKeyword__KeywordAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualParamByKeywordAccess().getKeywordIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getActualParamByKeywordAccess().getKeywordIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalExpression__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalExpressionAccess().getIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLocalExpressionAccess().getIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalExpression__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalExpressionAccess().getLiteralLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getLocalExpressionAccess().getLiteralLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__WildcardAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getWildcardAsteriskKeyword_0_0()); }
(
{ before(grammarAccess.getExprAccess().getWildcardAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getExprAccess().getWildcardAsteriskKeyword_0_0()); }
)

{ after(grammarAccess.getExprAccess().getWildcardAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprLocalExpressionParserRuleCall_1_0()); }
	ruleLocalExpression{ after(grammarAccess.getExprAccess().getExprLocalExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__PathExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getPathExprPathExprParserRuleCall_2_0()); }
	rulePathExpr{ after(grammarAccess.getExprAccess().getPathExprPathExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprNode__TailAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprNodeAccess().getTailSubconceptOrAttributeCrossReference_1_2_0()); }
(
{ before(grammarAccess.getPathExprNodeAccess().getTailSubconceptOrAttributeIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getPathExprNodeAccess().getTailSubconceptOrAttributeIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getPathExprNodeAccess().getTailSubconceptOrAttributeCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprTerm__AxisAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprTermAccess().getAxisAxisParserRuleCall_1_0()); }
	ruleAxis{ after(grammarAccess.getPathExprTermAccess().getAxisAxisParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathExprTerm__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathExprTermAccess().getRefSubconceptOrAttributeCrossReference_2_0()); }
(
{ before(grammarAccess.getPathExprTermAccess().getRefSubconceptOrAttributeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getPathExprTermAccess().getRefSubconceptOrAttributeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getPathExprTermAccess().getRefSubconceptOrAttributeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__AncestorAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAxisAccess().getAncestorCircumflexAccentKeyword_0()); }
(
{ before(grammarAccess.getAxisAccess().getAncestorCircumflexAccentKeyword_0()); }

	'^' 

{ after(grammarAccess.getAxisAccess().getAncestorCircumflexAccentKeyword_0()); }
)

{ after(grammarAccess.getAxisAccess().getAncestorCircumflexAccentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ANNOTATION_ID : '@' RULE_ID;

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


